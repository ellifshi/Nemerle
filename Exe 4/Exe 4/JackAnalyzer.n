//אראל פלדמר 209374420
//שניאור גלעדי 301739561
//מס' קבוצה 150060.01.5777.25
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using System.IO.File;
using System;
using System.Collections.Generic;
using System.Console;
using System.Linq;
using System.IO;
using System.Net.Sockets;
using Nemerle.Imperative;
using System.Collections.DictionaryEntry;
using Nemerle.Extensions;

module Program
{
    Main() : void
    {
        WriteLine("Pleas enter full directory path that you want to run");
        def pathJackFiles : string = ReadLine();

        mutable path : string = pathJackFiles;
        when(!Directory.Exists(path))
        {
            WriteLine("The path of folter, isn't correct! \nplease press anter to exit");
            _ = ReadLine();
            return;
        }
        mutable lines :array[string];
        foreach (file in Directory.EnumerateFiles(pathJackFiles, "*.jack"))
        {
            mutable pathTxmlFile : string = pathJackFiles + "\\" + Path.GetFileName(file.Replace(".jack", "T.xml"));
            mutable pathXMLFile : string = pathJackFiles + "\\" + Path.GetFileName(file.Replace(".jack", ".xml"));
            mutable fs =  FileStream(pathTxmlFile, FileMode.Create,FileAccess.Write);
            Exe_4.JackTokenizer.printTokens("<tokens>", fs);

            lines = File.ReadLines(file).Where(line => !line.Equals("") && !line.StartsWith("/") && !line.StartsWith("*") && !line.StartsWith(" * ") && !line.StartsWith(" */") && !line.StartsWith("    /")).ToArray(); //delete empty line
            Exe_4.JackTokenizer.sessionData(lines, pathTxmlFile, pathXMLFile);

            mutable fsTemp = FileStream(pathTxmlFile,FileMode.Append,FileAccess.Write);
            Exe_4.JackTokenizer.printTokens("</tokens>", fsTemp);       
            Exe_4.CompilationEngine(pathTxmlFile, pathXMLFile); 
        }
    }
}