class
Square
{
field
int
x
,
y
;
field
int
size
;
constructor
Square
new
(
int
Ax
,
int
Ay
,
int
Asize
)
{
let
x
eq
Ax
;
let
y
eq
Ay
;
let
size
eq
Asize
;
do
draw
(
)
;
return
this
;
}
method
void
dispose
(
)
{
do
Memory
.
deAlloc
(
this
)
;
return
;
}
method
void
draw
(
)
{
do
Screen
.
setColor
(
true
)
;
do
Screen
.
drawRectangle
(
x
,
y
,
x
add
size
,
y
add
size
)
;
return
;
}
method
void
erase
(
)
{
do
Screen
.
setColor
(
false
)
;
do
Screen
.
drawRectangle
(
x
,
y
,
x
add
size
,
y
add
size
)
;
return
;
}
method
void
incSize
(
)
{
if
(
(
(
y
add
size
)
lt
254
)
amp
(
(
x
add
size
)
lt
510
)
)
{
do
erase
(
)
;
let
size
eq
size
add
2
;
do
draw
(
)
;
}
return
;
}
method
void
decSize
(
)
{
if
(
size
gt
2
)
{
do
erase
(
)
;
let
size
eq
size
sub
2
;
do
draw
(
)
;
}
return
;
}
method
void
moveUp
(
)
{
if
(
y
gt
1
)
{
do
Screen
.
setColor
(
false
)
;
do
Screen
.
drawRectangle
(
x
,
(
y
add
size
)
sub
1
,
x
add
size
,
y
add
size
)
;
let
y
eq
y
sub
2
;
do
Screen
.
setColor
(
true
)
;
do
Screen
.
drawRectangle
(
x
,
y
,
x
add
size
,
y
add
1
)
;
}
return
;
}
method
void
moveDown
(
)
{
if
(
(
y
add
size
)
lt
254
)
{
do
Screen
.
setColor
(
false
)
;
do
Screen
.
drawRectangle
(
x
,
y
,
x
add
size
,
y
add
1
)
;
let
y
eq
y
add
2
;
do
Screen
.
setColor
(
true
)
;
do
Screen
.
drawRectangle
(
x
,
(
y
add
size
)
sub
1
,
x
add
size
,
y
add
size
)
;
}
return
;
}
method
void
moveLeft
(
)
{
if
(
x
gt
1
)
{
do
Screen
.
setColor
(
false
)
;
do
Screen
.
drawRectangle
(
(
x
add
size
)
sub
1
,
y
,
x
add
size
,
y
add
size
)
;
let
x
eq
x
sub
2
;
do
Screen
.
setColor
(
true
)
;
do
Screen
.
drawRectangle
(
x
,
y
,
x
add
1
,
y
add
size
)
;
}
return
;
}
method
void
moveRight
(
)
{
if
(
(
x
add
size
)
lt
510
)
{
do
Screen
.
setColor
(
false
)
;
do
Screen
.
drawRectangle
(
x
,
y
,
x
add
1
,
y
add
size
)
;
let
x
eq
x
add
2
;
do
Screen
.
setColor
(
true
)
;
do
Screen
.
drawRectangle
(
(
x
add
size
)
sub
1
,
y
,
x
add
size
,
y
add
size
)
;
}
return
;
}
}
